@charset "utf-8";

@media screen and (max-width: 768px){ /* タブレットやスマホでの見え方の調整をする。768px＝タブレットやスマホの基準値。 */
}

/* Base style */
/* フォントがうまく読み込まれなかった時の代替え案 */
body{
  font-family: "Noto Sans JP", "Helvetica Neue", "Helvetica", "Hiragino Sans", "Hiragino Kaku Gothic ProN", "Arial", "Yu Gothic", "Meiryo", sans-serif;
  font-size: 15px;
  line-height: 1.5;
  color: #333;
}
label, input, textarea, select, button{
    cursor: pointer;
}
button{
    border: 0;
}



.section{
    padding: 30px 15px;
}
.section.section-secounday{
    background: #efefef;
}
.section-headline{
    text-align: center;
    font-size: 40px;
    font-weight: bold;
    margin: 0 0 40px;/*1つは、全体。2つは、上下,左右。３つは、上,左右,下。４つは、上,右,下,左。*/
}
.section-botton{
    margin: 40px 0 0;
    text-align: center;
}
@media screen and (max-width: 768px){
    .section{
        padding: 20px 10px;
    }
    .section-headline{
        font-size: 30px;
        margin: 0 0 20px;
    }
    .section-botton{
        margin: 20px 0 0;
    }
}



.header{
    width: 100%;
    display: flex;
    justify-content: space-between; /* 要素が左右に端に寄る */
    align-items: center;
    padding: 0 15px;
    position: fixed; /* 他の要素と関係なく常に固定される */
    z-index: 10;
    top: 0;
    left: 0;
}
.header-logo{
    margin: 0;
}
.header-logo > a{
    display: block;
    color: transparent; /* transparent＝透明 */
}
/* .header-nav{} */
.header-navlist{
    margin: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}
/* .header-navitem{} */
.header-navitem > a{
    display: block;
    padding: 10px;
    color: #333;
    text-decoration: none;
    font-weight: bold;
    border-bottom: 2px solid transparent;
    transition: border-color .25s;
}
.header-navitem > a:hover{
    border-bottom: 2px solid #333; 
}
@media screen and (max-width: 768px){
    .header{
        font-size: 12px;
    }
}



.hero{
    width: 100vw; /* vw(view with)＝Windowサイズの横幅 */
    height: 100vh; /* vh(view hight)＝Windowサイズの縦幅 */
    position: relative;
    overflow: hidden;
}
.hero > strong{
    position: absolute;
    z-index: 3; /* z-index＝数字が大きい方が上に重なる */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 120px;
    color: #fff;
    font-weight: bold;
    display: block;
    width: 100%;
    text-align: center;
}
.hero > video{
    position: absolute;
    z-index: 1;
    width: auto;
    height: 115%;
}
.hero-particles{
    position: absolute;
    z-index: 2;
    width: 100%;
    height: 100%;
}
@media screen and (max-width: 768px){
    .hero > strong{
        font-size: 50px;
    }
}



.about{
    margin: 0;
    display: flex;/*aboutの子要素に対して、要素を横並びに出来る*/
}
/* .about-image{} */
.about-caption{
    padding-left: 15px;
}
.about-headline{
    margin: 0 0 20px;
    font-size: 30px;
}
/* .about-description{} */
@media screen and (max-width: 768px){
    .about{
        display: block;
    }
    .about-image{
        max-width: 100%;
        margin-bottom: 20px;
    }
    .about-headline{
        font-size: 20px;
        text-align: center;
    }
}



.grid{
    margin: 0;
    padding: 0;
    display: flex;
    align-content: center;
    justify-content: center;
}
.grid-item{
    list-style: none;
}

.grid-col-2 > .grid-item{
    width: 50%;
}
.grid-col-3 > .grid-item{
    width: 33.3%;
}
.grid-col-4 > .grid-item{
    width: 25%;
}
@media screen and (max-width: 768px){
    .grid{
        display: block;
    }
    .grid-col-2 > .grid-item,
    .grid-col-3 > .grid-item,
    .grid-col-4 > .grid-item{
        width: 100%;
        margin: 20px 0;
    }
}


.feature{
    text-align: center;
    padding: 0 15px;
}
.feature-headline{
    font-weight: bold;
    margin: 0 0 20px;
}
.feature-img{
    margin: 0 0 20px;
}
.feature-description{
    margin: 0;
    text-align: left;
}



.card{
    padding: 0 10px;
}
.card-link{
    display: block;
    color: #333;
    text-decoration: none;
    position: relative;
    transition: background-color .25s; /* アニメーションを作りたい時にtransitionはかなり使い勝手が良いのでおススメ */
}
.card-link:hover{
    background-color: #eee;
}
.card-label{/* 親要素のアンカーリンクタグにposition:relative;を付けた状態で、子孫・子要素にposition:absolute;を付けると、 position:relative;の中で自由に動かすことができる*/
    position: absolute;
    background-color: #999;
    color: #fff;
    display: block;
    padding: 5px 10px;
    font-size: 12px;
}
.card-image{
    width: 100%;
    height: auto;
}
.card-info{
    padding: 5px 10px;
}
/* .card-time{} */
.card-headline{
    margin: 0;
}
.card-description{
    margin: 0;
}
.avator{
    display: flex;
    flex-direction: row-reverse;/* 順番が反転する */
    align-items: center;
    justify-content: start;/* 左に寄せる */
    padding: 10px;
}
.avator-name{
    font-weight: bold;
    padding-left: 15px;

}
.avator-image{
    margin: 0;
    border-radius: 50%;/* 角丸を作る */
    overflow: hidden;/* 画像を丸くしたい時はborder-radius:50%;とoverflow:hidden;をセットで使う */
}

.button{
    display: inline-block;/* インライン要素でもありブロック要素でもある */ /* 横並びもできるし、上下左右にpadding・marginを持つことができる便利なプロパティ */
    color: #fff;
    font-weight: bold;
    background-color: #333;
    text-align: center;
    padding: 15px 60px;
    text-decoration: none;
    border-radius: 5px;
    box-shadow: 5px 5px 0 #bbb;/* X軸,Y軸,ぼかし、影を付けるプロパティ */
    transition: box-shadow .25s;
}

.button:hover{
    box-shadow: 0 0 0 #bbb;
}
.button.button-submission{
    background: #92d3ca;
}



.select{
    border-radius: 5px;
    padding: 10px;
    border: 1px solid #ccc;
    min-width: 500px;/* 最低500ピクセルの長さを保つ */
}
.input{
    border-radius: 5px;
    padding: 10px;
    border: 1px solid #ccc;
    min-width: 500px;
}
.radio{
    margin: 0 10px;
}
.textarea{
    border-radius: 5px;
    padding: 10px;
    border: 1px solid #ccc;
    min-width: 500px;
    min-height: 100px;
}
@media screen and (max-width: 768px){
    .select,
    .input,
    .textarea{
        min-width: auto;
        width: 100%;
    }
}



/* .from{} */
.form-table{
    margin: 0 auto; /* ブロックレベル要素のタグに対して、marginが上下は0だけども、左右をautoにすると 中央寄せ になる */
}
/* .form-table tr{} */
.form-table th{
    padding: 10px;
    text-align: left;
}
.form-table td{
    padding: 10px;
}
.form-button{
    margin: 20px;
    text-align: center;
}
@media screen and (max-width: 768px){
    .form-table,
    .form-table tbody,
    .form-table tr,
    .form-table th,
    .form-table td{
        display: block;
    }
}



.works{
    margin: 40px 0;
    padding: 20px;
    text-align: center;
}
.works > img{
    margin: 0 15px;
}
@media screen and (max-width: 768px){
    .works{
        margin: 20px 0;
        padding: 10px;
    }
    .works > img{
        width: 100px;
        margin: 5px;
    }
}



.footer{
    background-color: #333;
    color: #fff;
}
.footer-map{
    margin: 0;
    padding: 40px 15px;
    display: flex;
    align-items: center;
    justify-content: center;
}
.footer-map > iframe{
    width: 60%;
}
.footer-mapinfo{
    width: 40%;
    padding: 15px;
}
.footer-maplogo{
    font-size: 25px;
    font-weight: bold;
   
}
.fotter-maplogo > svg{
    fill: transparent; 
    margin-right: 10px;
}
.footer-mapaddress{
    font-style: normal;
}
.footer-mapaddress > a{
    color: #fff;
}
.footer-line{
    border-color: #444;
}
.footer-copy{
    display: block;
    text-align: center;
}
@media screen and (max-width: 768px){
    .footer-map{
        padding: 15px;
        display: block;
    }
    .footer-map > iframe{
        width: 100%;
        height: 200px;
    }
    .footer-mapinfo{
        width: 100%;
        text-align: center;
    }
}

